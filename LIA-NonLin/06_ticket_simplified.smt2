(set-logic HORN)
(set-info :source |
Author: Frank Schuessele <schuessf@informatik.uni-freiburg.de>
Date: 2022-02-28
Generated from SV-COMP example pthread-ext/06_ticket.c using Ultimate(using some simplification)
|)

(declare-fun Inv (Int Int Int Int Int Int Int Int) Bool)

(assert (forall ((now_serving Int) (next_ticket Int) (c Int) (loc_main_1 Int) (loc_thread_1 Int) (my_ticket_1 Int) (loc_thread_2 Int) (my_ticket_2 Int)) (=> (Inv now_serving next_ticket c loc_main_1 loc_thread_1 my_ticket_1 loc_thread_2 my_ticket_2) (Inv now_serving next_ticket c loc_main_1 loc_thread_2 my_ticket_2 loc_thread_1 my_ticket_1))))
(assert (forall ((now_serving Int) (next_ticket Int) (c Int) (my_ticket_1 Int) (my_ticket_2 Int)) (Inv now_serving next_ticket c 0 (- 1) my_ticket_1 (- 1) my_ticket_2)))
(assert (forall ((now_serving Int) (next_ticket Int) (c Int) (loc_main_1 Int) (my_ticket_1 Int) (loc_thread_2 Int) (my_ticket_2 Int)) (not (Inv now_serving next_ticket c loc_main_1 0 my_ticket_1 loc_thread_2 my_ticket_2))))
(assert (forall ((now_serving Int) (next_ticket Int) (c Int) (loc_thread_1 Int) (my_ticket_1 Int) (loc_thread_2 Int) (my_ticket_2 Int) (next_ticket_1 Int)) (=> (Inv now_serving next_ticket c 0 loc_thread_1 my_ticket_1 loc_thread_2 my_ticket_2) (= next_ticket_1 0) (Inv now_serving next_ticket_1 c 1 loc_thread_1 my_ticket_1 loc_thread_2 my_ticket_2))))
(assert (forall ((now_serving Int) (next_ticket Int) (c Int) (loc_thread_1 Int) (my_ticket_1 Int) (loc_thread_2 Int) (my_ticket_2 Int) (now_serving_1 Int)) (=> (Inv now_serving next_ticket c 1 loc_thread_1 my_ticket_1 loc_thread_2 my_ticket_2) (= now_serving_1 0) (Inv now_serving_1 next_ticket c 2 loc_thread_1 my_ticket_1 loc_thread_2 my_ticket_2))))
(assert (forall ((now_serving Int) (next_ticket Int) (c Int) (loc_thread_1 Int) (my_ticket_1 Int) (loc_thread_2 Int) (my_ticket_2 Int) (c_1 Int)) (=> (Inv now_serving next_ticket c 2 loc_thread_1 my_ticket_1 loc_thread_2 my_ticket_2) (= c_1 0) (Inv now_serving next_ticket c_1 3 loc_thread_1 my_ticket_1 loc_thread_2 my_ticket_2))))
(assert (forall ((now_serving Int) (next_ticket Int) (c Int) (my_ticket_1 Int) (loc_thread_2 Int) (my_ticket_2 Int)) (=> (Inv now_serving next_ticket c 3 (- 1) my_ticket_1 loc_thread_2 my_ticket_2) (Inv now_serving next_ticket c 3 1 my_ticket_1 loc_thread_2 my_ticket_2))))
(assert (forall ((now_serving Int) (next_ticket Int) (c Int) (loc_thread_1 Int) (my_ticket_1 Int) (loc_thread_2 Int) (my_ticket_2 Int)) (let ((.cse0 (Inv now_serving next_ticket c 3 loc_thread_1 my_ticket_1 loc_thread_2 my_ticket_2))) (=> .cse0 .cse0))))
(assert (forall ((now_serving Int) (next_ticket Int) (c Int) (loc_thread_1 Int) (my_ticket_1 Int) (loc_thread_2 Int) (my_ticket_2 Int)) (=> (Inv now_serving next_ticket c 4 loc_thread_1 my_ticket_1 loc_thread_2 my_ticket_2) (Inv now_serving next_ticket c 5 loc_thread_1 my_ticket_1 loc_thread_2 my_ticket_2))))
(assert (forall ((now_serving_8 Int) (next_ticket_9 Int) (c Int) (loc_main_1 Int) (my_ticket_1 Int) (loc_thread_2 Int) (my_ticket_2 Int) (next_ticket_8 Int) (my_ticket_5 Int)) (=> (Inv now_serving_8 next_ticket_9 c loc_main_1 1 my_ticket_1 loc_thread_2 my_ticket_2) (let ((.cse0 (mod (+ next_ticket_9 1) 3))) (and (not (= now_serving_8 .cse0)) (= next_ticket_8 .cse0) (= next_ticket_9 my_ticket_5))) (Inv now_serving_8 next_ticket_8 c loc_main_1 2 my_ticket_5 loc_thread_2 my_ticket_2))))
(assert (forall ((now_serving_5 Int) (next_ticket Int) (c Int) (loc_main_1 Int) (my_ticket_2 Int) (loc_thread_2 Int)) (=> (Inv now_serving_5 next_ticket c loc_main_1 2 my_ticket_2 loc_thread_2 my_ticket_2) (= my_ticket_2 now_serving_5) (Inv now_serving_5 next_ticket c loc_main_1 3 my_ticket_2 loc_thread_2 my_ticket_2))))
(assert (forall ((now_serving Int) (next_ticket Int) (c_6 Int) (loc_main_1 Int) (my_ticket_1 Int) (loc_thread_2 Int) (my_ticket_2 Int) (c_5 Int)) (=> (Inv now_serving next_ticket c_6 loc_main_1 3 my_ticket_1 loc_thread_2 my_ticket_2) (= c_5 (+ c_6 1)) (Inv now_serving next_ticket c_5 loc_main_1 4 my_ticket_1 loc_thread_2 my_ticket_2))))
(assert (forall ((now_serving Int) (next_ticket Int) (c_7 Int) (loc_main_1 Int) (my_ticket_1 Int) (loc_thread_2 Int) (my_ticket_2 Int)) (=> (Inv now_serving next_ticket c_7 loc_main_1 4 my_ticket_1 loc_thread_2 my_ticket_2) (not (= c_7 1)) (Inv now_serving next_ticket c_7 loc_main_1 0 my_ticket_1 loc_thread_2 my_ticket_2))))
(assert (forall ((now_serving Int) (next_ticket Int) (c_2 Int) (loc_main_1 Int) (my_ticket_1 Int) (loc_thread_2 Int) (my_ticket_2 Int)) (=> (Inv now_serving next_ticket c_2 loc_main_1 4 my_ticket_1 loc_thread_2 my_ticket_2) (= c_2 1) (Inv now_serving next_ticket c_2 loc_main_1 5 my_ticket_1 loc_thread_2 my_ticket_2))))
(assert (forall ((now_serving Int) (next_ticket Int) (c_4 Int) (loc_main_1 Int) (my_ticket_1 Int) (loc_thread_2 Int) (my_ticket_2 Int) (c_3 Int)) (=> (Inv now_serving next_ticket c_4 loc_main_1 5 my_ticket_1 loc_thread_2 my_ticket_2) (= c_3 (+ (- 1) c_4)) (Inv now_serving next_ticket c_3 loc_main_1 6 my_ticket_1 loc_thread_2 my_ticket_2))))
(assert (forall ((now_serving_3 Int) (next_ticket Int) (c Int) (loc_main_1 Int) (my_ticket_1 Int) (loc_thread_2 Int) (my_ticket_2 Int) (now_serving_2 Int)) (=> (Inv now_serving_3 next_ticket c loc_main_1 6 my_ticket_1 loc_thread_2 my_ticket_2) (= (+ now_serving_3 1) now_serving_2) (Inv now_serving_2 next_ticket c loc_main_1 7 my_ticket_1 loc_thread_2 my_ticket_2))))
(assert (forall ((now_serving Int) (next_ticket Int) (c Int) (loc_main_1 Int) (my_ticket_1 Int) (loc_thread_2 Int) (my_ticket_2 Int)) (=> (Inv now_serving next_ticket c loc_main_1 7 my_ticket_1 loc_thread_2 my_ticket_2) (Inv now_serving next_ticket c loc_main_1 8 my_ticket_1 loc_thread_2 my_ticket_2))))
(assert (forall ((now_serving_8 Int) (next_ticket_9 Int) (c Int) (loc_main_1 Int) (loc_thread_1 Int) (my_ticket_1 Int) (loc_thread_2 Int) (my_ticket_2 Int) (next_ticket_8 Int) (my_ticket_5 Int)) (=> (Inv now_serving_8 next_ticket_9 c loc_main_1 1 my_ticket_1 loc_thread_2 my_ticket_2) (Inv now_serving_8 next_ticket_9 c loc_main_1 loc_thread_1 my_ticket_1 1 my_ticket_2) (Inv now_serving_8 next_ticket_9 c loc_main_1 loc_thread_1 my_ticket_1 loc_thread_2 my_ticket_2) (let ((.cse0 (mod (+ next_ticket_9 1) 3))) (and (not (= now_serving_8 .cse0)) (= next_ticket_8 .cse0) (= next_ticket_9 my_ticket_5))) (Inv now_serving_8 next_ticket_8 c loc_main_1 loc_thread_1 my_ticket_1 loc_thread_2 my_ticket_2))))
(assert (forall ((now_serving_5 Int) (next_ticket Int) (c Int) (loc_main_1 Int) (loc_thread_1 Int) (my_ticket_1 Int) (loc_thread_2 Int) (my_ticket_2 Int)) (let ((.cse0 (Inv now_serving_5 next_ticket c loc_main_1 loc_thread_1 my_ticket_1 loc_thread_2 my_ticket_2))) (=> (Inv now_serving_5 next_ticket c loc_main_1 2 my_ticket_2 loc_thread_2 my_ticket_2) (Inv now_serving_5 next_ticket c loc_main_1 loc_thread_1 my_ticket_1 2 my_ticket_2) .cse0 (= my_ticket_2 now_serving_5) .cse0))))
(assert (forall ((now_serving Int) (next_ticket Int) (c_6 Int) (loc_main_1 Int) (loc_thread_1 Int) (my_ticket_1 Int) (loc_thread_2 Int) (my_ticket_2 Int) (c_5 Int)) (=> (Inv now_serving next_ticket c_6 loc_main_1 3 my_ticket_1 loc_thread_2 my_ticket_2) (Inv now_serving next_ticket c_6 loc_main_1 loc_thread_1 my_ticket_1 3 my_ticket_2) (Inv now_serving next_ticket c_6 loc_main_1 loc_thread_1 my_ticket_1 loc_thread_2 my_ticket_2) (= c_5 (+ c_6 1)) (Inv now_serving next_ticket c_5 loc_main_1 loc_thread_1 my_ticket_1 loc_thread_2 my_ticket_2))))
(assert (forall ((now_serving Int) (next_ticket Int) (c_7 Int) (loc_main_1 Int) (loc_thread_1 Int) (my_ticket_1 Int) (loc_thread_2 Int) (my_ticket_2 Int)) (let ((.cse0 (Inv now_serving next_ticket c_7 loc_main_1 loc_thread_1 my_ticket_1 loc_thread_2 my_ticket_2))) (=> (Inv now_serving next_ticket c_7 loc_main_1 4 my_ticket_1 loc_thread_2 my_ticket_2) (Inv now_serving next_ticket c_7 loc_main_1 loc_thread_1 my_ticket_1 4 my_ticket_2) .cse0 (not (= c_7 1)) .cse0))))
(assert (forall ((now_serving Int) (next_ticket Int) (c_2 Int) (loc_main_1 Int) (loc_thread_1 Int) (my_ticket_1 Int) (loc_thread_2 Int) (my_ticket_2 Int)) (let ((.cse0 (Inv now_serving next_ticket c_2 loc_main_1 loc_thread_1 my_ticket_1 loc_thread_2 my_ticket_2))) (=> (Inv now_serving next_ticket c_2 loc_main_1 4 my_ticket_1 loc_thread_2 my_ticket_2) (Inv now_serving next_ticket c_2 loc_main_1 loc_thread_1 my_ticket_1 4 my_ticket_2) .cse0 (= c_2 1) .cse0))))
(assert (forall ((now_serving Int) (next_ticket Int) (c_4 Int) (loc_main_1 Int) (loc_thread_1 Int) (my_ticket_1 Int) (loc_thread_2 Int) (my_ticket_2 Int) (c_3 Int)) (=> (Inv now_serving next_ticket c_4 loc_main_1 5 my_ticket_1 loc_thread_2 my_ticket_2) (Inv now_serving next_ticket c_4 loc_main_1 loc_thread_1 my_ticket_1 5 my_ticket_2) (Inv now_serving next_ticket c_4 loc_main_1 loc_thread_1 my_ticket_1 loc_thread_2 my_ticket_2) (= c_3 (+ (- 1) c_4)) (Inv now_serving next_ticket c_3 loc_main_1 loc_thread_1 my_ticket_1 loc_thread_2 my_ticket_2))))
(assert (forall ((now_serving_3 Int) (next_ticket Int) (c Int) (loc_main_1 Int) (loc_thread_1 Int) (my_ticket_1 Int) (loc_thread_2 Int) (my_ticket_2 Int) (now_serving_2 Int)) (=> (Inv now_serving_3 next_ticket c loc_main_1 6 my_ticket_1 loc_thread_2 my_ticket_2) (Inv now_serving_3 next_ticket c loc_main_1 loc_thread_1 my_ticket_1 6 my_ticket_2) (Inv now_serving_3 next_ticket c loc_main_1 loc_thread_1 my_ticket_1 loc_thread_2 my_ticket_2) (= (+ now_serving_3 1) now_serving_2) (Inv now_serving_2 next_ticket c loc_main_1 loc_thread_1 my_ticket_1 loc_thread_2 my_ticket_2))))
(assert (forall ((now_serving Int) (next_ticket Int) (c Int) (loc_main_1 Int) (loc_thread_1 Int) (my_ticket_1 Int) (loc_thread_2 Int) (my_ticket_2 Int)) (let ((.cse0 (Inv now_serving next_ticket c loc_main_1 loc_thread_1 my_ticket_1 loc_thread_2 my_ticket_2))) (=> (Inv now_serving next_ticket c loc_main_1 7 my_ticket_1 loc_thread_2 my_ticket_2) (Inv now_serving next_ticket c loc_main_1 loc_thread_1 my_ticket_1 7 my_ticket_2) .cse0 .cse0))))

(check-sat)
